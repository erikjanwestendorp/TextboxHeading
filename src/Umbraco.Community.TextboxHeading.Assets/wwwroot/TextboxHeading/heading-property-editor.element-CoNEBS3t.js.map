{"version":3,"file":"heading-property-editor.element-CoNEBS3t.js","sources":["../../../Umbraco.Community.TextboxHeading.Client/TextboxHeading/src/property-editors/heading/heading-property-editor.element.ts"],"sourcesContent":["import {\r\n  LitElement,\r\n  html,\r\n  customElement,\r\n  property,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport {\r\n  ManifestPropertyEditorUi,\r\n  UmbPropertyEditorUiElement,\r\n} from \"@umbraco-cms/backoffice/property-editor\";\r\nimport {\r\n  UUIInputEvent,\r\n} from \"@umbraco-cms/backoffice/external/uui\";\r\nimport { UmbChangeEvent } from \"@umbraco-cms/backoffice/event\";\r\nimport { type UmbPropertyEditorConfigCollection } from '@umbraco-cms/backoffice/property-editor';\r\n\r\ntype PropertyEditorValueType = {\r\n  text?: string;\r\n  size?: string;\r\n};\r\n\r\n@customElement(\"heading-property-editor\")\r\nexport class headingPropertyEditorElement\r\n  extends UmbElementMixin(LitElement)\r\n  implements UmbPropertyEditorUiElement\r\n{\r\n  private _sizeOptions: Array<{ value: string; name: string }> = [];\r\n\r\n  @property({ type: Object, attribute: false })\r\n  manifest?: ManifestPropertyEditorUi;\r\n\r\n  @property({ type: Object, attribute: false })\r\n  value?: PropertyEditorValueType;  \r\n\r\n  #setValueProperty(property: keyof PropertyEditorValueType, value: string) {\r\n    const newValue = { ...this.value }; \r\n    newValue[property] = value;\r\n    this.value = newValue;\r\n    this.dispatchEvent(new UmbChangeEvent());\r\n  }\r\n\r\n  @property({ attribute: false })\r\n  public set config(config: UmbPropertyEditorConfigCollection) {\r\n    const allowedHeadings = config.getValueByAlias(\"allowedHeadings\");\r\n\r\n      if (Array.isArray(allowedHeadings)) {\r\n        this._sizeOptions = allowedHeadings.map((heading: string) => ({\r\n          value: heading,\r\n          name: heading\r\n        }));\r\n      } else {\r\n        this._sizeOptions = []; \r\n      }\r\n\r\n      this.requestUpdate(); \r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div style=\"display: flex; width: 100%;\">\r\n        <div style=\"flex: 0 0 80%;\">\r\n          <uui-input\r\n            id=\"text\"\r\n            value=${this.value?.text ?? \"\"}\r\n            style=\"width: 100%;\"\r\n            @input=${(e: UUIInputEvent) =>\r\n              this.#setValueProperty(\"text\", e.target.value as string)}>\r\n          </uui-input>\r\n        </div>\r\n        <div style=\"flex: 0 0 20%; margin-left: 2px;\">\r\n          <uui-select\r\n            label=\"Select size\"\r\n            placeholder=\"Select size...\"\r\n            value=${this.value?.size ?? \"\"}\r\n            style=\"width: 100%;\"\r\n            .options=${\r\n              this._sizeOptions.map((e) => ({\r\n                ...e,\r\n                selected: e.value == this.value?.size,\r\n              }))\r\n            }\r\n            @change=${(e: Event) => {\r\n              const target = e.target as HTMLSelectElement;\r\n              this.#setValueProperty(\"size\", target.value);\r\n            }}>\r\n           </uui-select>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\nexport default headingPropertyEditorElement;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    \"textbox-heading-property-editor\": headingPropertyEditorElement;\r\n  }\r\n}"],"names":["_headingPropertyEditorElement_instances","setValueProperty_fn","headingPropertyEditorElement","UmbElementMixin","LitElement","__privateAdd","config","allowedHeadings","heading","html","_a","__privateMethod","_b","target","property","value","newValue","UmbChangeEvent","__decorateClass","customElement","headingPropertyEditorElement$1"],"mappings":";;;;;;;;;8OAAAA,GAAAC;AAuBO,IAAMC,IAAN,cACGC,EAAgBC,CAAU,EAEpC;AAAA,EAHO,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAL,CAAA,GAIL,KAAQ,eAAuD,CAAA;AAAA,EAAC;AAAA,EAgBhE,IAAW,OAAOM,GAA2C;AAC3D,UAAMC,IAAkBD,EAAO,gBAAgB,iBAAiB;AAE9D,IAAI,MAAM,QAAQC,CAAe,IAC/B,KAAK,eAAeA,EAAgB,IAAI,CAACC,OAAqB;AAAA,MAC5D,OAAOA;AAAA,MACP,MAAMA;AAAA,IAAA,EACN,IAEF,KAAK,eAAe,CAAA,GAGtB,KAAK,cAAA;AAAA,EAAc;AAAA,EAGvB,SAAS;;AACP,WAAOC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKSC,IAAA,KAAK,UAAL,gBAAAA,EAAY,SAAQ,EAAE;AAAA;AAAA,qBAErB,CAAC,MACRC,EAAA,MAAKX,GAAAC,CAAA,EAAL,WAAuB,QAAQ,EAAE,OAAO,KAAA,CAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOlDW,IAAA,KAAK,UAAL,gBAAAA,EAAY,SAAQ,EAAE;AAAA;AAAA,uBAG5B,KAAK,aAAa,IAAI,CAAC,MAAA;;AAAO;AAAA,QAC5B,GAAG;AAAA,QACH,UAAU,EAAE,WAASF,IAAA,KAAK,UAAL,gBAAAA,EAAY;AAAA,MAAA;AAAA,KACjC,CACJ;AAAA,sBACU,CAAC,MAAa;AACtB,YAAMG,IAAS,EAAE;AACjB,MAAAF,EAAA,MAAKX,GAAAC,CAAA,EAAL,KAAA,MAAuB,QAAQY,EAAO,KAAA;AAAA,IAAA,CACvC;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAMb;AApEOb,IAAA,oBAAA,QAAA;AAYLC,IAAiB,SAACa,GAAyCC,GAAe;AACxE,QAAMC,IAAW,EAAE,GAAG,KAAK,MAAA;AAC3B,EAAAA,EAASF,CAAQ,IAAIC,GACrB,KAAK,QAAQC,GACb,KAAK,cAAc,IAAIC,GAAgB;AACzC;AAVAC,EAAA;AAAA,EADCJ,EAAS,EAAE,MAAM,QAAQ,WAAW,IAAO;AAAA,GANjCZ,EAOX,WAAA,YAAA,CAAA;AAGAgB,EAAA;AAAA,EADCJ,EAAS,EAAE,MAAM,QAAQ,WAAW,IAAO;AAAA,GATjCZ,EAUX,WAAA,SAAA,CAAA;AAUWgB,EAAA;AAAA,EADVJ,EAAS,EAAE,WAAW,GAAA,CAAO;AAAA,GAnBnBZ,EAoBA,WAAA,UAAA,CAAA;AApBAA,IAANgB,EAAA;AAAA,EADNC,EAAc,yBAAyB;AAAA,GAC3BjB,CAAA;AAsEb,MAAAkB,IAAelB;"}